{"version":3,"sources":["components/pages/About.js","context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layouts/TextInputGroup.js","components/contacts/AddContacts.js","components/contacts/EditContacts.js","components/layouts/Header.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["About","className","Component","Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Consumer","Contact","onshowclick","e","onDeleteclick","a","delete","name","email","phone","showContactInfo","onClick","style","cursor","to","float","color","padding","bind","Contacts","Fragment","key","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","defaultProps","AddContacts","errors","onSubmit","preventDefault","newContact","post","history","push","target","EditContacts","updcontact","match","params","put","Header","href","branding","NotFound","Test","title","body","fetch","then","response","json","console","log","App","exact","path","component","Notfound","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.7ea5086c.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class About extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 className=\"display-4\">About Contact Manager</h1>\r\n                <p className=\"lead\">Simple app to manage Contacts</p>\r\n                <p className=\"text-seconsary\"></p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          (contact) => contact.id !== action.payload\r\n        ),\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts],\r\n      };\r\n    case \"UPDATE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts:\r\n          state.contacts.map(contact =>\r\n            contact.id === action.payload.id ? (contact = action.payload)\r\n            : contact)\r\n      }\r\n\r\n    default:\r\n  }\r\n  return state;\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [\r\n\r\n    ],\r\n    dispatch: (action) => this.setState((state) => reducer(state, action)),\r\n  };\r\n  async componentDidMount() {\r\n    const res =\r\n      await axios.get('https://jsonplaceholder.typicode.com/users');\r\n     this.setState({contacts: res.data})\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../../context\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Contact extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {};\r\n  }\r\n  onshowclick = (e) => {\r\n    this.setState({ onshowclick: !this.state.onshowclick });\r\n  };\r\n\r\n  onDeleteclick = async (id, dispatch) => {\r\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n    dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n  };\r\n\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {name}{\" \"}\r\n                <i\r\n                  onClick={() =>\r\n                    this.setState({\r\n                      showContactInfo: !this.state.showContactInfo,\r\n                    })\r\n                  }\r\n                  className=\"fas fa-sort-down\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n                <Link to={`edit/${id}`}>\r\n                  <i\r\n                    className=\"fas fa-pencil-alt\"\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      float: \"right\",\r\n                      color: \"black\",\r\n                      padding: \"3px\",\r\n                    }}\r\n                  ></i>\r\n                </Link>\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{\r\n                    cursor: \"pointer\",\r\n                    float: \"right\",\r\n                    color: \"red\",\r\n                  }}\r\n                  onClick={this.onDeleteclick.bind(this, id, dispatch)}\r\n                />\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\"> Email: {email}</li>\r\n\r\n                  <li className=\"list-group-item\">Phone: {phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired,\r\n};\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\n\r\nimport Contact from \"./Contact\";\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-2\">\r\n                <span className=\"text-danger\">Contacts </span>\r\n                List\r\n              </h1>\r\n              {contacts.map((contact) => (\r\n                <Contact key={contact.id} contact={contact} />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error,\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames(\"form-control form-control-lg\", {\r\n          \"is-invalid\": error,\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\",\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layouts/TextInputGroup\";\r\nimport axios from \"axios\";\r\n\r\nexport default class AddContacts extends Component {\r\n                 state = {\r\n                   name: \"\",\r\n                   email: \"\",\r\n                   phone: \"\",\r\n                   errors: {},\r\n                 };\r\n\r\n                 onSubmit = async (dispatch, e) => {\r\n                   e.preventDefault();\r\n\r\n                   const { name, email, phone } = this.state;\r\n\r\n                   // Check For Errors\r\n                   if (name === \"\") {\r\n                     this.setState({ errors: { name: \"Name is required\" } });\r\n                     return;\r\n                   }\r\n\r\n                   if (email === \"\") {\r\n                     this.setState({ errors: { email: \"Email is required\" } });\r\n                     return;\r\n                   }\r\n\r\n                   if (phone === \"\") {\r\n                     this.setState({ errors: { phone: \"Phone is required\" } });\r\n                     return;\r\n                   }\r\n\r\n                   const newContact = {\r\n                     name,\r\n                     email,\r\n                     phone,\r\n                   };\r\n\r\n                   const res = await axios.post(\r\n                     \"https://jsonplaceholder.typicode.com/users\",\r\n                     newContact\r\n                   );\r\n\r\n                   dispatch({ type: \"ADD_CONTACT\", payload: res.data });\r\n\r\n                   // Clear State\r\n                   this.setState({\r\n                     name: \"\",\r\n                     email: \"\",\r\n                     phone: \"\",\r\n                     errors: {},\r\n                   });\r\n\r\n                   this.props.history.push(\"/\");\r\n                 };\r\n\r\n                 onChange = (e) =>\r\n                   this.setState({ [e.target.name]: e.target.value });\r\n\r\n                 render() {\r\n                   const { name, email, phone, errors } = this.state;\r\n\r\n                   return (\r\n                     <Consumer>\r\n                       {(value) => {\r\n                         const { dispatch } = value;\r\n                         return (\r\n                           <div className=\"card mb-3\">\r\n                             <div className=\"card-header\">Add Contact</div>\r\n                             <div className=\"card-body\">\r\n                               <form\r\n                                 onSubmit={this.onSubmit.bind(this, dispatch)}\r\n                               >\r\n                                 <TextInputGroup\r\n                                   label=\"Name\"\r\n                                   name=\"name\"\r\n                                   placeholder=\"Enter Name\"\r\n                                   value={name}\r\n                                   onChange={this.onChange}\r\n                                   error={errors.name}\r\n                                 />\r\n                                 <TextInputGroup\r\n                                   label=\"Email\"\r\n                                   name=\"email\"\r\n                                   type=\"email\"\r\n                                   placeholder=\"Enter Email\"\r\n                                   value={email}\r\n                                   onChange={this.onChange}\r\n                                   error={errors.email}\r\n                                 />\r\n                                 <TextInputGroup\r\n                                   label=\"Phone\"\r\n                                   name=\"phone\"\r\n                                   placeholder=\"Enter Phone\"\r\n                                   value={phone}\r\n                                   onChange={this.onChange}\r\n                                   error={errors.phone}\r\n                                 />\r\n                                 <input\r\n                                   type=\"submit\"\r\n                                   value=\"Add Contact\"\r\n                                   className=\"btn btn-light btn-block\"\r\n                                 />\r\n                               </form>\r\n                             </div>\r\n                           </div>\r\n                         );\r\n                       }}\r\n                     </Consumer>\r\n                   );\r\n                 }\r\n               }\r\n\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layouts/TextInputGroup\";\r\nimport axios from \"axios\";\r\n\r\n\r\nexport default class EditContacts extends Component {\r\n state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {},\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n    const contact = res.data;\r\n\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone\r\n    });\r\n  }\r\n  \r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    // Check For Errors\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"value is required\" } });\r\n      return;\r\n    }\r\n\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required\" } });\r\n      return;\r\n    }\r\n\r\n    const updcontact = {\r\n      name,\r\n      email,\r\n      phone\r\n    }\r\n\r\n    const { id } = this.props.match.params;\r\n\r\n    const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updcontact);\r\n    dispatch({ type: 'UPDATE_CONTACT', payload: res.data });\r\n    // Clear State\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {},\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\" card mb-3\">\r\n              <div className=\"card-header\">Edit contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Edit contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {props.branding}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-home\" /> Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/add\" className=\"nav-link\">\r\n                <i className=\"fas fa-plus\" /> Add\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <i className=\"fas fa-question\" /> About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react'\r\n\r\nexport default class NotFound extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 className=\"display-4\">\r\n                    404 Page Not Found\r\n                </h1>\r\n                <p className=\"lead\"> Sorry, that Page does not exists</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Test extends Component {\r\n  state = {\r\n    title: \"\",\r\n    body: \"\"\r\n  };\r\n  componentDidMount() {\r\n      fetch(\"https://jsonplaceholder.typicode.com/posts/1\")\r\n      .then((response) => response.json())\r\n      .then((data) =>\r\n        this.setState({\r\n          title: data.title,\r\n            body: data.body\r\n         \r\n        })\r\n      );\r\n      console.log(this.body);\r\n  }\r\n\r\n  render() {\r\n    const { title, body } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>{title}</h1>\r\n        <p> {body}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport About from \"./components/pages/About\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport AddContacts from \"./components/contacts/AddContacts\";\nimport EditContacts from \"./components/contacts/EditContacts\";\nimport Header from \"./components/layouts/Header\";\nimport { Provider } from \"./context\";\nimport Notfound from \"./components/pages/NotFound\";\nimport Test from \"./components/test/Test\";\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <Header branding=\"Contact Manager\" />\n        <div className=\"container\">\n          <Switch>\n            <Route exact path=\"/\" component={Contacts} />\n            <Route exact path=\"/add\" component={AddContacts} />\n            <Route exact path=\"/edit/:id\" component={EditContacts} />\n            <Route exact path=\"/test\" component={Test} />\n            <Route exact path=\"/about\" component={About} />\n            <Route component={Notfound} />\n          </Switch>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}